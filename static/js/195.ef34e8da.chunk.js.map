{"version":3,"file":"static/js/195.ef34e8da.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","redux/contacts/contactsSelectors.js","redux/filter/filterSelectors.js","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/Contacts/Contacts.styled.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactsBar/ContactsBar.styled.jsx","components/ContactsBar/ContactsBar.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { Form, Field, Formik } from 'formik';\nimport styled from 'styled-components';\n\nexport const FormikWrapper = styled(Formik)``;\n\nexport const FormBox = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  align-items: center;\n  gap: 30px;\n  font-size: 20px;\n  margin-bottom: 50px;\n  max-width: 500px;\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  width: 100%;\n`;\n\nexport const Text = styled.span`\n  display: flex;\n  margin-right: auto;\n  justify-content: center;\n  color: #8000ff;\n  font-size: 1.5rem;\n  -webkit-text-stroke: 1px black;\n`;\n\nexport const InputName = styled(Field)`\n  width: 400px;\n  margin: 0 auto;\n  padding: 10px;\n  border: none;\n  border-radius: 10px;\n  font-size: 1.2rem;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  transition: box-shadow 0.2s ease;\n\n  &::placeholder {\n    font-size: 20px;\n  }\n  &:focus {\n    outline: none;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.8);\n  }\n`;\n\nexport const InputTel = styled(InputName)``;\n\nexport const Button = styled.button`\n  background-color: #6a2ddb;\n  color: white;\n  -webkit-text-stroke: 1px black;\n  display: flex;\n  width: 150px;\n  min-height: 50px;\n  font-size: 24px;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border: none;\n  border-radius: 20px;\n  box-shadow: 10px 10px 5px 0px rgba(0, 0, 0, 0.75);\n  transition: background-color 1000ms cubic-bezier(0.075, 0.82, 0.165, 1);\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: rgb(0, 55, 255);\n  }\n`;\n\nexport const Message = styled.p`\n  text-align: center;\n  margin-top: 10px;\n  color: red;\n  font-size: 17px;\n  -webkit-text-stroke: 1px black;\n  -webkit-text-fill-color: white;\n`;\n","import { ErrorMessage } from 'formik';\nimport { object, string } from 'yup';\nimport PropTypes from 'prop-types';\nimport { MdPersonAdd } from 'react-icons/md';\nimport {\n  FormBox,\n  InputName,\n  InputTel,\n  Button,\n  FormikWrapper,\n  Message,\n  Label,\n  Text,\n} from './ContactForm.styled';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst userSchema = object({\n  name: string()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required('⚠️Please enter name.'),\n  number: string()\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('⚠️Please enter number.'),\n});\n\nconst FormContact = ({ onSubmit }) => {\n  function handleSubmit({ name, number }, { resetForm }) {\n    onSubmit(name, number);\n    resetForm();\n  }\n\n  return (\n    <FormikWrapper\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={userSchema}\n    >\n      <FormBox autoComplete=\"off\">\n        <Label>\n          <Text>Name</Text>\n          <InputName placeholder=\"Enter contact name\" type=\"text\" name=\"name\" />\n          <ErrorMessage component={Message} name=\"name\" />\n        </Label>\n        <Label>\n          <Text>Phone</Text>\n          <InputTel\n            placeholder=\"Enter contact phone\"\n            type=\"tel\"\n            name=\"number\"\n          />\n          <ErrorMessage component={Message} name=\"number\" />\n        </Label>\n        <Button type=\"submit\">\n          <MdPersonAdd /> Add contact\n        </Button>\n      </FormBox>\n    </FormikWrapper>\n  );\n};\n\nFormContact.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default FormContact;\n","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\n\nexport const selectFilter = state => state.filter;\n\nexport const filterListContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\nexport const LiItem = styled.li`\n  padding-left: 8px;\n  padding-right: 8px;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: 4px;\n  border: 1px solid #c9a66b;\n  width: 100%;\n`;\nexport const SpanIcon = styled.span`\n  svg {\n    width: 30px;\n    height: 30px;\n    color: ${props => props.inputColor || 'palevioletred'};\n  }\n`;\n\nexport const SpanName = styled.span`\n  -webkit-text-stroke: 1px black;\n  color: #fefdfc;\n  font-weight: 500;\n  font-size: 20px;\n`;\n\nexport const SpanNumber = styled.span`\n  -webkit-text-stroke: 1px white;\n  color: #120933;\n  font-weight: 500;\n  font-size: 20px;\n  margin-left: auto;\n`;\n\nexport const ButtonDlt = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  margin-left: auto;\n  text-align: center;\n  background-color: transparent;\n  cursor: pointer;\n  color: #10063a;\n  border-radius: 50%;\n  border-color: transparent;\n  outline: none;\n  transition: transform 250ms ease-in;\n  :hover,\n  :focus {\n    svg {\n      transform: scale(1.1);\n    }\n  }\n  svg {\n    width: 24px;\n    height: 24px;\n    transition: transform 250ms linear;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/contactsOperations';\nimport { RxAvatar } from 'react-icons/rx';\nimport { RiDeleteBin6Line } from 'react-icons/ri';\nimport {\n  LiItem,\n  SpanIcon,\n  SpanName,\n  SpanNumber,\n  ButtonDlt,\n} from './ContactItem.styled';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const handleDelete = id => dispatch(deleteContact(id));\n  return (\n    <LiItem key={id}>\n      <SpanIcon\n        inputColor={`#${Math.floor(Math.random() * 16777215).toString(16)}`}\n      >\n        <RxAvatar />\n      </SpanIcon>\n      <SpanName>{name}</SpanName>\n      <SpanNumber>{number}</SpanNumber>\n      <ButtonDlt type=\"button\" onClick={() => handleDelete(id)}>\n        <RiDeleteBin6Line />\n      </ButtonDlt>\n    </LiItem>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","import styled from 'styled-components';\n\nexport const UlList = styled.ul`\n  margin-top: 15px;\n  min-width: 500px;\n  background-color: #da97f7;\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0;\n  gap: 15px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { useSelector } from 'react-redux';\nimport { selectFilter } from '../../redux/filter/filterSelectors';\nimport { selectContacts } from '../../redux/contacts/contactsSelectors';\nimport ContactItem from '../ContactItem';\nimport { UlList } from './Contacts.styled';\n\nconst Contacts = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const visibleContacts = (() => {\n    return contacts\n      .filter(\n        contact =>\n          contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n          contact.number.includes(filter.toLowerCase())\n      )\n      .sort((firstContact, secondContact) =>\n        firstContact.name.localeCompare(secondContact.name)\n      );\n  })();\n\n  return (\n    <>\n      <UlList>\n        {visibleContacts.map(({ id, name, number }) => {\n          return <ContactItem key={id} name={name} number={number} id={id} />;\n        })}\n      </UlList>\n    </>\n  );\n};\n\nexport default Contacts;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  gap: 5px;\n  flex-direction: column;\n  color: #8000ff;\n  font-size: 16px;\n  -webkit-text-stroke: 1px black;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  min-width: 500px;\n  margin: 0 auto;\n  padding: 10px;\n  border: none;\n  border-radius: 10px;\n  font-size: 1.2rem;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  transition: box-shadow 0.2s ease;\n\n  &::placeholder {\n    font-size: 20px;\n  }\n  &:focus {\n    outline: none;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.8);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { filterContacts } from '../../redux/filter/filterSlice';\nimport { Label, Input } from './Filter.styled';\n\nconst SearchFilter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilter = ({ target: { value } }) => {\n    dispatch(filterContacts(value));\n  };\n  return (\n    <Label>\n      Find contacts by name or number\n      <Input type=\"text\" name=\"filter\" onChange={handleFilter} />\n    </Label>\n  );\n};\n\nexport default SearchFilter;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  /* flex-direction: column; */\n  /* flex-wrap: wrap; */\n  /* align-items: center; */\n  width: 700px;\n  margin: 50px auto;\n  gap: 100px;\n  justify-content: center;\n`;\nexport const SectionWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n`;\n\nexport const Title = styled.h1`\n  font-size: 48px;\n  color: #8000ff;\n  -webkit-text-stroke: 1px white;\n  -webkit-text-fill-color: #8000ff;\n`;\n\nexport const Text = styled.h2`\n  font-size: 32px;\n  color: #8000ff;\n  -webkit-text-stroke: 1px white;\n`;\n\nexport const Message = styled.p`\n  margin-left: auto;\n  margin-right: auto;\n  width: 500px;\n  padding: 10px;\n  font-size: 24px;\n  color: #310328;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact, fetchContacts } from 'redux/contacts/contactsOperations';\nimport FormContact from 'components/ContactForm';\nimport Contacts from 'components/Contacts';\nimport SearchFilter from 'components/Filter';\nimport {\n  Message,\n  Title,\n  Wrapper,\n  Text,\n  SectionWrapper,\n} from './ContactsBar.styled';\nimport { toast } from 'react-toastify';\nimport {\n  selectContacts,\n  selectIsLoading,\n  selectError,\n} from 'redux/contacts/contactsSelectors';\n\nconst ContactsBar = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const notifiesAlert = nameContact => {\n    toast.info(`${nameContact} is already in contacts`);\n  };\n\n  const isContact = (name, number) =>\n    contacts.some(\n      contact =>\n        contact.name.toLowerCase() === name.toLowerCase() ||\n        contact.number === number\n    );\n\n  const onSubmit = (name, number) => {\n    if (isContact(name, number)) {\n      return notifiesAlert(name);\n    }\n\n    dispatch(addContact({ name, number }));\n  };\n\n  return (\n    <Wrapper isHeight={contacts.length > 0}>\n      <SectionWrapper>\n        <Title>Phonebook</Title>\n        <FormContact onSubmit={onSubmit} />\n      </SectionWrapper>\n      <SectionWrapper>\n        <Text>Contacts</Text>\n\n        {!error && isLoading}\n\n        {!error && !isLoading && contacts.length === 0 ? (\n          <Message>You have no contacts🙁 But you can fix it😜</Message>\n        ) : (\n          <>\n            <SearchFilter />\n            <Contacts />\n          </>\n        )}\n      </SectionWrapper>\n    </Wrapper>\n  );\n};\n\nexport default ContactsBar;\n","import ContactsBar from 'components/ContactsBar';\nimport { useAuth } from 'hooks';\n\nconst Contacts = () => {\n  const { isLoading } = useAuth();\n\n  return (\n    <>\n      <title>Contacts</title>\n\n      {isLoading}\n      <ContactsBar />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["FormikWrapper","styled","Formik","FormBox","Form","Label","Text","InputName","Field","InputTel","Button","Message","initialValues","name","number","userSchema","object","string","matches","required","onSubmit","resetForm","validationSchema","autoComplete","placeholder","type","component","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","createSelector","toLowerCase","includes","LiItem","SpanIcon","props","inputColor","SpanName","SpanNumber","ButtonDlt","id","dispatch","useDispatch","Math","floor","random","toString","onClick","deleteContact","handleDelete","UlList","useSelector","visibleContacts","contact","sort","firstContact","secondContact","localeCompare","map","Input","onChange","value","target","filterContacts","Wrapper","SectionWrapper","Title","useEffect","fetchContacts","isHeight","length","some","isContact","nameContact","toast","addContact","useAuth"],"sourceRoot":""}